import Layout from '../layouts/Layout.astro';
import { getTeamMembers, urlFor } from '../utils/sanity';

// Fetch team members from Sanity CMS
let teamMembers = [];
let error = null;

try {
  teamMembers = await getTeamMembers();
} catch (e) {
  error = e.message;
  console.error('Error fetching team members:', e);
}

const groupOrder = ['pi', 'lab_manager', 'faculty', 'research_staff'] as const;
const groupTitles = {
  pi: 'Principal Investigator',
  lab_manager: 'Lab Management',
  faculty: 'Faculty & Fellows',
  research_staff: 'Research Staff'
};

// Group members by their role
const groupedMembers = groupOrder.reduce((acc, group) => {
  acc[group] = teamMembers.filter(member => member.group === group);
  return acc;
}, {} as Record<typeof groupOrder[number], typeof teamMembers>);

<Layout title="Our Team | Sheehan Lab">
  <main>
    <section class="page-header">
      <div class="container">
        <h1>Our Team</h1>
        <p>Meet our passionate team of researchers</p>
      </div>
    </section>

    {error ? (
      <section class="error-section">
        <div class="container">
          <div class="error-message">
            <h2>üîß Unable to load team data</h2>
            <p>Please ensure the Sanity CMS is properly configured.</p>
            <details>
              <summary>Technical details</summary>
              <p>{error}</p>
            </details>
          </div>
        </div>
      </section>
    ) : teamMembers.length === 0 ? (
      <section class="empty-section">
        <div class="container">
          <div class="empty-message">
            <h2>üìù No team members found</h2>
            <p>Add team members through the Sanity Studio to see them here.</p>
          </div>
        </div>
      </section>
    ) : (
      groupOrder.map(group => {
        const members = groupedMembers[group];
        if (members.length === 0) return null;

        return (
          <section class={`team-section ${group}`}>
            <div class="container">
              <h2 class="section-title">{groupTitles[group]}</h2>
              <div class={`team-grid ${group === 'pi' ? 'featured' : ''}`}>
                {members.map((member) => (
                  <div class="team-member">
                    <div class="member-photo-container">
                      {member.image ? (
                        <img 
                          src={urlFor(member.image).width(300).height(300).quality(85).url()} 
                          alt={member.name}
                          class="member-photo"
                          loading="lazy"
                        />
                      ) : (
                        <div class="photo-placeholder">
                          <span class="placeholder-icon">üë§</span>
                        </div>
                      )}
                    </div>
                    <div class="member-info">
                      <h3 class="member-name">{member.name}</h3>
                      <p class="member-role">{member.role}</p>
                      <div class="member-bio">
                        {member.bio.split('\n\n').map(paragraph => (
                          <p>{paragraph}</p>
                        ))}
                      </div>
                      <a href={`mailto:${member.email}`} class="contact-email">
                        {member.email}
                      </a>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </section>
        );
      })
    )}
  </main>

  <style>
    .page-header {
      background: var(--emory-primary);
      color: white;
      padding: 4rem 0 2.5rem;
      margin-top: 60px;
      text-align: center;
      position: relative;
    }

    .page-header::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
    }

    .page-header h1 {
      font-size: 2.5rem;
      margin-bottom: 1rem;
      color: white;
      position: relative;
      z-index: 1;
    }

    .page-header p {
      color: rgba(255, 255, 255, 0.9);
      position: relative;
      z-index: 1;
      font-size: 1.1rem;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 1.25rem;
    }

    .error-section, .empty-section {
      padding: 4rem 0;
      background: #f8fafc;
    }

    .error-message, .empty-message {
      background: white;
      border-radius: 12px;
      padding: 3rem;
      text-align: center;
      box-shadow: 0 2px 12px rgba(0, 33, 105, 0.06);
    }

    .error-message h2, .empty-message h2 {
      color: var(--emory-primary);
      margin-bottom: 1rem;
    }

    .team-section {
      padding: 4rem 0;
      background: white;
    }

    .team-section:nth-child(even) {
      background: #f8fafc;
    }

    .section-title {
      font-size: 2rem;
      color: var(--emory-primary);
      text-align: center;
      margin-bottom: 3rem;
      position: relative;
    }

    .section-title::after {
      content: '';
      position: absolute;
      bottom: -10px;
      left: 50%;
      transform: translateX(-50%);
      width: 60px;
      height: 3px;
      background: var(--emory-secondary);
      border-radius: 2px;
    }

    .team-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
    }

    .team-grid.featured {
      grid-template-columns: 1fr;
      max-width: 800px;
      margin: 0 auto;
    }

    .team-member {
      background: white;
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 2px 12px rgba(0, 33, 105, 0.06);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .team-member:hover {
      transform: translateY(-4px);
      box-shadow: 0 8px 25px rgba(0, 33, 105, 0.12);
    }

    .featured .team-member {
      display: grid;
      grid-template-columns: 250px 1fr;
      gap: 2rem;
      align-items: start;
    }

    .member-photo-container {
      position: relative;
      aspect-ratio: 1;
      overflow: hidden;
    }

    .featured .member-photo-container {
      aspect-ratio: 1;
      border-radius: 12px;
      margin: 2rem;
    }

    .member-photo {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.3s ease;
    }

    .team-member:hover .member-photo {
      transform: scale(1.05);
    }

    .photo-placeholder {
      width: 100%;
      height: 100%;
      background: linear-gradient(135deg, #f0f4f8 0%, #e2e8f0 100%);
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .placeholder-icon {
      font-size: 4rem;
      color: #a0aec0;
    }

    .member-info {
      padding: 1.5rem;
    }

    .featured .member-info {
      padding: 2rem 2rem 2rem 0;
    }

    .member-name {
      font-size: 1.5rem;
      color: var(--emory-primary);
      margin-bottom: 0.5rem;
      font-weight: 600;
    }

    .member-role {
      color: var(--emory-secondary);
      font-weight: 500;
      margin-bottom: 1rem;
      font-size: 1.1rem;
    }

    .member-bio {
      color: #4a5568;
      line-height: 1.6;
      margin-bottom: 1.5rem;
    }

    .member-bio p {
      margin-bottom: 1rem;
    }

    .member-bio p:last-child {
      margin-bottom: 0;
    }

    .contact-email {
      color: var(--emory-primary);
      text-decoration: none;
      font-weight: 500;
      transition: color 0.3s ease;
    }

    .contact-email:hover {
      color: var(--emory-secondary);
      text-decoration: underline;
    }

    @media (max-width: 768px) {
      .page-header {
        padding: 3rem 0 2rem;
      }

      .page-header h1 {
        font-size: 2rem;
      }

      .team-section {
        padding: 3rem 0;
      }

      .team-grid {
        grid-template-columns: 1fr;
        gap: 1.5rem;
      }

      .team-grid.featured {
        grid-template-columns: 1fr;
      }

      .featured .team-member {
        grid-template-columns: 1fr;
        text-align: center;
      }

      .featured .member-photo-container {
        margin: 2rem auto;
        max-width: 200px;
      }

      .featured .member-info {
        padding: 0 2rem 2rem;
      }
    }

    details {
      margin-top: 1rem;
    }

    summary {
      cursor: pointer;
      color: var(--emory-secondary);
    }

    details p {
      margin-top: 0.5rem;
      padding: 1rem;
      background: #f7fafc;
      border-radius: 8px;
      font-family: monospace;
      font-size: 0.9rem;
    }
  </style>
</Layout> 