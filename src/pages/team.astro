---
import Layout from '../layouts/Layout.astro';

interface TeamMember {
  name: string;
  role: string;
  bio: string;
  email: string;
  image?: string;
  group: 'pi' | 'lab_manager' | 'faculty' | 'research_staff';
}

const teamMembers: TeamMember[] = [
  { 
    name: "Dr. Vivien A. Sheehan", 
    role: "Principal Investigator",
    group: "pi", 
    bio: "Dr. Vivien Sheehan is a physician scientist dedicated to improving the lives of individuals with sickle cell disease of all ages. Vivien earned a PhD in Biochemistry from Texas A&M before entering medical school at Emory University School of Medicine. At Emory, Dr. Sheehan was inspired by her patients with sickle cell disease, and decided to devote her career to sickle cell research and patient care.\n\nShe then went on to complete a med-peds residency and two fellowships, pediatric Heme Onc at St Jude Children's Research Hospital and Internal Medicine Hematology at the University of Tennessee. Dr. Sheehan spent 8 years at Baylor College of Medicine, developing her research program, which includes omics, transition from acute to chronic pain, fetal hemoglobin regulation, gene therapy and red cell rheology research.\n\nVivien moved to Atlanta in 2020 and is now an Associate Professor of Pediatrics at Emory University School of Medicine, where she directs their translational sickle cell disease research program.",
    email: "vivien.sheehan@emory.edu",
    image: "/images/headshots/vivien.png"
  },
  { 
    name: "Britney Hernandez", 
    role: "Lab Manager",
    group: "lab_manager", 
    bio: "Lab manager overseeing daily operations and project management.",
    email: "britney.hernandez@emory.edu",
    image: "/images/headshots/britney.png"
  },
  { 
    name: "Dr. Justin J. Yoo", 
    role: "Junior Faculty",
    group: "faculty", 
    bio: "Junior faculty member leading multiple research initiatives.",
    email: "justin.yoo@emory.edu",
    image: "/images/headshots/justin.jpg"
  },
  { 
    name: "Dr. Ashwin P. Patel", 
    role: "Research Assistant Professor",
    group: "faculty", 
    bio: "Research Assistant Professor focusing on statistical analysis and clinical study design.",
    email: "ashwin.patel@emory.edu",
    image: "/images/headshots/ashwin.png"
  },
  {
    name: "Dr. Ugochukwu Agbakwuru, MD, MPH",
    role: "Pediatric Hematology/Oncology Fellow",
    group: "faculty",
    bio: "Clinical fellow focusing on sickle cell disease research.",
    email: "ugo.agbakwuru@emory.edu",
    image: "/images/headshots/agbakwuru-ugochukwu.png"
  },
  { 
    name: "Dr. Kennedy N. Goldsborough", 
    role: "Post-doctoral Fellow",
    group: "faculty", 
    bio: "Post-doctoral fellow focusing on IHP and microglia research.",
    email: "kennedy.goldsborough@emory.edu",
    image: "/images/headshots/kennedy.png"
  },
  { 
    name: "Dr. Anupama Priyadarshini", 
    role: "Staff Scientist",
    group: "research_staff", 
    bio: "Staff scientist leading various research projects.",
    email: "anupama.priyadarshini@emory.edu",
    image: "/images/headshots/anupama.png"
  },
  { 
    name: "Erica E. Evans", 
    role: "Lead Research Assistant",
    group: "research_staff", 
    bio: "Lead research assistant managing multiple projects.",
    email: "erica.evans@emory.edu",
    image: "/images/headshots/erica.png"
  },
  { 
    name: "Michael 'Alex' Pendergast", 
    role: "MSP Graduate Student",
    group: "research_staff", 
    bio: "Graduate student in the MSP program.",
    email: "alex.pendergast@emory.edu"
  },
  { 
    name: "Zak Kostamo", 
    role: "Research Specialist",
    group: "research_staff", 
    bio: "Research specialist supporting lab projects.",
    email: "zak.kostamo@emory.edu",
    image: "/images/headshots/zak.png"
  },
  { 
    name: "Jonathan Wade", 
    role: "Research Specialist",
    group: "research_staff", 
    bio: "Research specialist supporting lab projects.",
    email: "jonathan.wade@emory.edu",
    image: "/images/headshots/jonathanwade.jpeg"
  },
  { 
    name: "Kathleen Romero", 
    role: "Research Specialist",
    group: "research_staff", 
    bio: "Research specialist supporting lab projects.",
    email: "kathleen.romero@emory.edu"
  },
  { 
    name: "Mary C. Aliche", 
    role: "Research Specialist",
    group: "research_staff", 
    bio: "Research specialist working on multiple projects.",
    email: "mary.aliche@emory.edu",
    image: "/images/headshots/mary.jpg"
  },
  { 
    name: "Jedidah G. Titus", 
    role: "Research Specialist",
    group: "research_staff", 
    bio: "Research specialist focusing on microfluidics.",
    email: "jedidah.titus@emory.edu",
    image: "/images/headshots/jedidah.jpg"
  },
  { 
    name: "Srija Ponna", 
    role: "Research Specialist",
    group: "research_staff", 
    bio: "Research specialist working on microfluidics projects.",
    email: "srija.ponna@emory.edu",
    image: "/images/headshots/srija.png"
  },
  { 
    name: "Akshay Patwardhan", 
    role: "Research Specialist (Part-Time)",
    group: "research_staff", 
    bio: "Part-time research specialist.",
    email: "akshay.patwardhan@emory.edu",
    image: "/images/headshots/akshay.png"
  },
  {
    name: "Nav Bharucha",
    role: "Undergraduate Research Assistant",
    group: "research_staff",
    bio: "Part-time undergraduate research assistant supporting lab projects.",
    email: "nav.bharucha@emory.edu",
    image: "/images/headshots/nav.jpg"
  }
];

// Add placeholder images for team members without images
teamMembers.forEach(member => {
  if (!member.image) {
    member.image = "/images/placeholder-headshot.jpg";
  }
});

const groupOrder = ['pi', 'lab_manager', 'faculty', 'research_staff'] as const;
const groupTitles = {
  pi: 'Principal Investigator',
  lab_manager: 'Lab Management',
  faculty: 'Faculty & Fellows',
  research_staff: 'Research Staff'
};

// Group members by their role
const groupedMembers = groupOrder.reduce((acc, group) => {
  acc[group] = teamMembers.filter(member => member.group === group);
  return acc;
}, {} as Record<typeof groupOrder[number], TeamMember[]>);
---

<Layout title="Our Team | Sheehan Lab">
  <main>
    <section class="page-header">
      <div class="container">
        <h1>Our Team</h1>
        <p>Meet our passionate team of researchers</p>
      </div>
    </section>

    {groupOrder.map(group => {
      const members = groupedMembers[group];
      if (members.length === 0) return null;

      return (
        <section class={`team-section ${group}`}>
          <div class="container">
            <h2 class="section-title">{groupTitles[group]}</h2>
            <div class={`team-grid ${group === 'pi' ? 'featured' : ''}`}>
              {members.map((member) => (
                <div class="team-member">
                  <div class="member-card">
                    <div class="member-image">
                      <img src={member.image} alt={`${member.name} headshot`} />
                    </div>
                    <div class="member-info">
                      <h3>{member.name}</h3>
                      <p class="role">{member.role}</p>
                      <button class="expand-button" aria-label="Show more details">
                        <span class="icon">↓</span>
                      </button>
                    </div>
                    <div class="member-details">
                      <div class="bio-section">
                        {member.bio.split('\n\n').map((paragraph) => (
                          <p>{paragraph}</p>
                        ))}
                      </div>
                      <div class="contact-section">
                        <h4>Contact</h4>
                        <a href={`mailto:${member.email}`} class="email-link">
                          <span class="icon">✉</span>
                          {member.email}
                        </a>
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>
      );
    })}

    <section class="join-team">
      <div class="container">
        <h2>Join Our Team</h2>
        <p>We're always looking for passionate researchers to join our mission in advancing sickle cell disease treatment.</p>
        <div class="cta-buttons">
          <a href="/positions" class="button primary">View Open Positions</a>
          <a href="/contact" class="button secondary">Contact Us</a>
        </div>
      </div>
    </section>
  </main>

  <style>
    .page-header {
      background: url('/images/team_photo.jpg') center/cover;
      position: relative;
      padding: 12rem 2rem 8rem;
      margin-top: 60px;
      text-align: center;
      position: relative;
      background-attachment: fixed;
      min-height: 60vh;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .page-header::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
      opacity: 0.1;
    }

    .page-header .container {
      position: relative;
      z-index: 2;
      animation: fadeIn 1s ease-out;
    }

    .page-header h1 {
      font-size: 3.5rem;
      color: white;
      margin-bottom: 1rem;
      text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
    }

    .page-header p {
      color: rgba(255,255,255,0.9);
      font-size: 1.5rem;
      max-width: 600px;
      margin: 0 auto;
      line-height: 1.6;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @media (max-width: 768px) {
      .page-header {
        padding: 8rem 1rem 4rem;
        min-height: 40vh;
        background-attachment: scroll;
      }

      .page-header h1 {
        font-size: 2.5rem;
      }

      .page-header p {
        font-size: 1.2rem;
      }

      .section-title {
        font-size: 1.75rem;
      }

      .team-grid {
        grid-template-columns: 1fr;
      }

      .member-image {
        height: 200px;
      }

      .cta-buttons {
        flex-direction: column;
        align-items: center;
      }

      .button {
        width: 100%;
        max-width: 300px;
        text-align: center;
      }
    }

    .team-section {
      padding: 4rem 0;
    }

    .team-section:nth-child(odd) {
      background: #f8fafc;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 2rem;
    }

    .section-title {
      color: var(--emory-primary);
      font-size: 2rem;
      text-align: center;
      margin-bottom: 3rem;
      position: relative;
    }

    .section-title::after {
      content: '';
      position: absolute;
      bottom: -0.5rem;
      left: 50%;
      transform: translateX(-50%);
      width: 60px;
      height: 3px;
      background: var(--emory-primary);
      border-radius: 2px;
    }

    .team-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 2rem;
      margin-top: 2rem;
    }

    .team-grid.featured, 
    .lab_manager .team-grid {
      display: flex;
      justify-content: center;
      max-width: 800px;
      margin: 0 auto;
    }

    .lab_manager .team-member {
      width: 350px;
    }

    .member-card {
      background: white;
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease;
      height: 100%;
      display: flex;
      flex-direction: column;
    }

    .featured .member-card {
      display: flex;
      flex-direction: column;
      max-width: 450px;
      margin: 0 auto;
    }

    .member-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
    }

    .member-image {
      width: 100%;
      height: 300px;
      overflow: hidden;
      position: relative;
    }

    .featured .member-image {
      height: 325px;
    }

    .member-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center 25%;
      transition: transform 0.3s ease;
    }

    .member-info {
      padding: 1.5rem;
      text-align: center;
      position: relative;
      background: white;
      flex-grow: 1;
      display: flex;
      flex-direction: column;
      justify-content: center;
    }

    .featured .member-info {
      text-align: center;
      padding: 2rem;
    }

    .member-info h3 {
      color: var(--emory-primary);
      font-size: 1.5rem;
      margin-bottom: 0.5rem;
    }

    .featured .member-info h3 {
      font-size: 1.75rem;
    }

    .role {
      color: #4a5568;
      font-size: 1rem;
      font-weight: 500;
      margin-bottom: 1rem;
    }

    .featured .role {
      font-size: 1.25rem;
      margin-bottom: 1.5rem;
    }

    .expand-button {
      background: none;
      border: none;
      color: var(--emory-primary);
      cursor: pointer;
      padding: 0.5rem;
      transition: transform 0.3s ease;
      margin-top: auto;
      opacity: 0.7;
    }

    .expand-button:hover {
      opacity: 1;
    }

    .expand-button .icon {
      display: inline-block;
      transition: transform 0.3s ease;
    }

    .member-details {
      max-height: 0;
      opacity: 0;
      overflow: hidden;
      transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
      background: #f8fafc;
      border-top: 1px solid #e2e8f0;
    }

    .member-details.active {
      max-height: 1000px;
      opacity: 1;
    }

    .bio-section {
      padding: 1.5rem;
      text-align: left;
    }

    .bio-section p {
      color: #2d3748;
      line-height: 1.6;
      margin-bottom: 1rem;
    }

    .contact-section {
      padding: 1.5rem;
      background: white;
      border-top: 1px solid #e2e8f0;
    }

    .contact-section h4 {
      color: var(--emory-primary);
      font-size: 1.1rem;
      margin-bottom: 0.75rem;
    }

    .email-link {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      color: #4a5568;
      text-decoration: none;
      transition: color 0.3s ease;
    }

    .email-link:hover {
      color: var(--emory-primary);
    }

    .join-team {
      background: white;
      padding: 4rem 0;
      text-align: center;
    }

    .cta-buttons {
      display: flex;
      gap: 1rem;
      justify-content: center;
      margin-top: 2rem;
    }

    .button {
      display: inline-block;
      padding: 0.75rem 1.5rem;
      border-radius: 6px;
      text-decoration: none;
      font-weight: 500;
      transition: all 0.3s ease;
    }

    .button.primary {
      background: var(--emory-primary);
      color: white;
    }

    .button.secondary {
      background: transparent;
      color: var(--emory-primary);
      border: 2px solid var(--emory-primary);
    }

    .button:hover {
      transform: translateY(-2px);
    }

    @media (max-width: 992px) {
      .featured .member-card {
        grid-template-columns: 1fr;
      }

      .featured .member-image {
        height: 300px;
      }

      .featured .member-info {
        text-align: center;
      }
    }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const members = document.querySelectorAll('.team-member');
      
      members.forEach((member) => {
        const button = member.querySelector('.expand-button');
        const details = member.querySelector('.member-details');
        const icon = button?.querySelector('.icon');
        
        if (button && details && icon) {
          button.addEventListener('click', (e) => {
            e.preventDefault();
            const wasActive = details.classList.contains('active');
            
            // Close all other open details
            document.querySelectorAll('.member-details.active').forEach(detail => {
              if (detail !== details) {
                detail.classList.remove('active');
                const memberIcon = detail.closest('.team-member')?.querySelector('.icon');
                if (memberIcon instanceof HTMLElement) {
                  memberIcon.style.transform = 'rotate(0deg)';
                }
              }
            });

            // Toggle the clicked details
            details.classList.toggle('active');
            if (icon instanceof HTMLElement) {
              icon.style.transform = wasActive ? 'rotate(0deg)' : 'rotate(180deg)';
            }
            
            // Scroll into view if opening and not fully visible
            if (!wasActive) {
              setTimeout(() => {
                const rect = member.getBoundingClientRect();
                const isFullyVisible = 
                  rect.top >= 0 &&
                  rect.bottom <= window.innerHeight;
                
                if (!isFullyVisible) {
                  member.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
                }
              }, 100);
            }
          });
        }
      });
    });
  </script>
</Layout>